{"version":3,"sources":["components/TableRow/styles.js","components/Drawer/index.js","components/TableRow/index.js","components/TableRow/utils.js","hooks/useApiGet.js","components/Filter/index.js","components/Appbar/index.js","components/Index.js","components/utils.js","App.js","reportWebVitals.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","useStyles1","root","action","hover","height","TableRow","makeStyles","table","minWidth","margin","DrawerComponent","classesDrawer","open","handleDrawerClose","data","Drawer","className","drawer","variant","anchor","classes","paper","drawerPaper","drawerHeader","IconButton","onClick","direction","Divider","List","Object","keys","map","filename","testName","ListItem","button","component","href","ListItemText","primary","useRowStyles","borderBottom","truncateString","message","num","length","slice","TableRowComponent","severity","type","React","useState","setOpen","Fragment","aria-label","size","scope","align","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","Typography","Table","TableBody","gutterBottom","getColor","useApiGet","setData","useEffect","fetch","then","response","json","console","log","catch","err","useStyles2","flexGrow","checkBoxType","checkBoxSeverity","search","position","borderRadius","shape","fade","marginLeft","width","breakpoints","up","spacing","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Filter","appliedFilter","appliedFilterType","onSearchChange","onCheckboxChanged","onCheckboxChangedType","Checkbox","value","checked","includes","onChange","InputBase","placeholder","input","inputProps","e","target","prototype","string","array","func","isRequired","defaultProps","AppBarComponent","setSearch","handleDrawerOpen","AppBar","clsx","appBar","appBarShift","Toolbar","edge","menuButton","hide","id","noWrap","searchString","Index","setAppliedFilter","setAppliedFilterType","applyFilter","filter","old","removeFilter","applyFilterType","removeFilterType","drawerWidth","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginRight","flexShrink","mixins","toolbar","content","contentShift","useStyles","useTheme","Grid","container","item","xs","fileName","testLogArray","logArray","searchResults","toLowerCase","testLog","some","filterType","startsWith","filterSearch","TableHead","itemRenderer","index","key","currentTestLog","itemsRenderer","items","ref","renderTableBody","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed06c167.chunk.js","sourcesContent":["//Table import\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\n//Table styles\nexport const StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nexport const StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n    height: 30,\n  },\n}))(TableRow);\n\nexport const useStyles1 = makeStyles({\n  table: {\n    minWidth: 650,\n    margin: \"auto\",\n  },\n});\n","import React from \"react\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst DrawerComponent = ({\n  classesDrawer,\n  open,\n  handleDrawerClose,\n  theme,\n  data,\n}) => {\n  return (\n    <>\n      <Drawer\n        className={classesDrawer.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classesDrawer.drawerPaper,\n        }}\n      >\n        <div className={classesDrawer.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {Object.keys(data).map((filename) =>\n            Object.keys(data[filename]).map((testName) => (\n              <ListItem\n                button\n                key={testName}\n                component=\"a\"\n                href={`#${testName}`}\n              >\n                <ListItemText primary={testName} />\n              </ListItem>\n            ))\n          )}\n        </List>\n        <Divider />\n        <List>\n          <ListItem button component=\"a\" href={`#top`}>\n            <ListItemText primary={\"to top\"} />\n          </ListItem>\n        </List>\n      </Drawer>\n    </>\n  );\n};\n\nexport default DrawerComponent;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useRowStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n});\n\nfunction truncateString(message, num) {\n  if (message.length <= num) {\n    return message;\n  }\n\n  return message.slice(0, num) + \"...\";\n}\n\nconst TableRowComponent = ({ severity, message, type, color, ...rest }) => {\n  const classes = useRowStyles();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {type}\n        </TableCell>\n        <TableCell align=\"left\">{severity}</TableCell>\n        <TableCell align=\"left\" style={{ backgroundColor: color }}>\n          {<pre>{truncateString(message, 40)}</pre>}\n        </TableCell>\n      </TableRow>\n\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\">The whole Message</Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"left\" gutterBottom component=\"div\">\n                      {<pre>{message}</pre>}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nexport default TableRowComponent;\n","export const getColor = ({ type, severity }) => {\n  //const {severity} = item;\n  // const severity = item.severity;\n\n  if (type === \"cons:info\") {\n    return \"#87CEFA\";\n  }\n\n  switch (severity) {\n    case \"info\":\n      return \"#87CEFA\";\n    case \"warning\":\n      return \"yellow\";\n    case \"error\":\n      return \"#ff000080\";\n    case \"fatal\":\n      return \"#ff000080\";\n    default:\n      return \"\";\n  }\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useApiGet = () => {\n  const [data, setData] = useState([]);\n\n  const apiGet = () => {\n    fetch(\"./1bubbleHistory.json\")\n      .then((response) => response.json())\n      .then((json) => {\n        setData(json);\n        console.log(\"fetched data: \" + data);\n      })\n      .catch(function (err) {\n        console.log(err, \" error\");\n      });\n  };\n\n  useEffect(() => {\n    apiGet();\n  }, []);\n\n  return data;\n};\n","import { React } from \"react\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { string, array, func } from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  checkBoxType: {\n    margin: \"auto\",\n  },\n  checkBoxSeverity: {\n    margin: \"auto\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst Filter = ({\n  search,\n  appliedFilter,\n  appliedFilterType,\n  onSearchChange,\n  onCheckboxChanged,\n  onCheckboxChangedType,\n}) => {\n  const classes = useStyles2();\n  return (\n    <>\n      <div className={classes.checkBoxSeverity}>\n        <label>errors</label>\n        <Checkbox\n          value=\"error\"\n          checked={appliedFilter.includes(\"error\")}\n          color=\"default\"\n          onChange={onCheckboxChanged}\n        ></Checkbox>\n        <label>warnings</label>\n        <Checkbox\n          value=\"warning\"\n          checked={appliedFilter.includes(\"warning\")}\n          color=\"default\"\n          onChange={onCheckboxChanged}\n        ></Checkbox>\n        <label>successes</label>\n        <Checkbox\n          value=\"success\"\n          checked={appliedFilter.includes(\"success\")}\n          color=\"default\"\n          onChange={onCheckboxChanged}\n        ></Checkbox>\n      </div>\n      {/* \n          onChange for the search field:\n          search state gets changed and therefore the second useEffect (filterSearch function) gets triggered \n          and filteredData gets updated\n          */}\n\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n          value={search}\n          onChange={(e) => onSearchChange(e.target.value)}\n        />\n      </div>\n\n      <div className={classes.checkBoxType}>\n        <label>cy</label>\n        <Checkbox\n          value=\"cy:\"\n          color=\"default\"\n          checked={appliedFilterType.includes(\"cy:\")}\n          onChange={onCheckboxChangedType}\n        ></Checkbox>\n        <label>cons</label>\n        <Checkbox\n          value=\"cons:\"\n          color=\"default\"\n          checked={appliedFilterType.includes(\"cons:\")}\n          onChange={onCheckboxChangedType}\n        ></Checkbox>\n      </div>\n    </>\n  );\n};\n\nFilter.prototype = {\n  search: string,\n  appliedFilter: array,\n  appliedFilterType: array,\n  onSearchChange: func.isRequired,\n  onCheckboxChanged: func.isRequired,\n  onCheckboxChangedType: func.isRequired,\n};\n\nFilter.defaultProps = {\n  search: \"\",\n  appliedFilter: [],\n  appliedFilterType: [],\n  onSearchChange: () => {},\n};\n\nexport default Filter;\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Filter from \"../Filter/index\";\nimport Typography from \"@material-ui/core/Typography\";\nimport clsx from \"clsx\";\n\nconst AppBarComponent = ({\n  search,\n  setSearch,\n  appliedFilter,\n  appliedFilterType,\n  onCheckboxChanged,\n  onCheckboxChangedType,\n  classesDrawer,\n  open,\n  handleDrawerOpen,\n}) => {\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classesDrawer.appBar, {\n          [classesDrawer.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(\n              classesDrawer.menuButton,\n              open && classesDrawer.hide\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography id=\"#top\" variant=\"h5\" noWrap>\n            Logviewer\n          </Typography>\n          <Filter\n            search={search}\n            appliedFilter={appliedFilter}\n            appliedFilterType={appliedFilterType}\n            onSearchChange={(searchString) => setSearch(searchString)}\n            onCheckboxChanged={onCheckboxChanged}\n            onCheckboxChangedType={onCheckboxChangedType}\n          />\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default AppBarComponent;\n","import React, { useState } from \"react\";\nimport { useStyles1, StyledTableCell } from \"./TableRow/styles\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport DrawerComponent from \"./Drawer\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Grid } from \"@material-ui/core\";\nimport ReactList from \"react-list\";\nimport TableRowComponent from \"./TableRow\";\n\nimport { getColor } from \"./TableRow/utils\";\nimport { useApiGet } from \"../hooks/useApiGet\";\n\nimport { filterSearch } from \"./utils\";\nimport AppBarComponent from \"./Appbar\";\n\nfunction Index() {\n  const data = useApiGet();\n  const classes = useStyles1();\n  const [search, setSearch] = useState(\"\");\n  const [appliedFilter, setAppliedFilter] = useState([\n    \"warning\",\n    \"error\",\n    \"success\",\n  ]);\n  const [appliedFilterType, setAppliedFilterType] = useState([\"cy:\", \"cons:\"]);\n\n  const onCheckboxChanged = (e, checked) => {\n    checked ? applyFilter(e.target.value) : removeFilter(e.target.value);\n  };\n\n  const onCheckboxChangedType = (e, checked) => {\n    checked\n      ? applyFilterType(e.target.value)\n      : removeFilterType(e.target.value);\n  };\n\n  const applyFilter = (filter) => {\n    // we set the appliedFilter state to whatever it is plus the value from the checkbox that was checked\n    setAppliedFilter((old) => [...old, filter]);\n  };\n\n  const removeFilter = (filter) => {\n    // we set the appliedFilter state to whatever it is minus the checkbox that was checked\n    setAppliedFilter((old) => old.filter((value) => value !== filter));\n    console.log(\"applied filter: \" + appliedFilter);\n  };\n\n  const applyFilterType = (filter) => {\n    // we set the appliedFilterType state to whatever it is plus the value from the checkbox that was checked\n    setAppliedFilterType((old) => [...old, filter]);\n  };\n\n  const removeFilterType = (filter) => {\n    // we set the appliedFilterType state to whatever it is minus the checkbox that was checked\n    // setAppliedFilterType(old => [...old.filter((value) => value !== filter)])\n    setAppliedFilterType((old) => old.filter((value) => value !== filter));\n  };\n\n  //Drawer\n  const drawerWidth = 240;\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));\n\n  const classesDrawer = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div className={classesDrawer.root}>\n        <AppBarComponent\n          search={search}\n          setSearch={setSearch}\n          appliedFilter={appliedFilter}\n          appliedFilterType={appliedFilterType}\n          onCheckboxChanged={onCheckboxChanged}\n          onCheckboxChangedType={onCheckboxChangedType}\n          classesDrawer={classesDrawer}\n          open={open}\n          handleDrawerOpen={handleDrawerOpen}\n        />\n\n        <DrawerComponent\n          classesDrawer={classesDrawer}\n          open={open}\n          handleDrawerClose={handleDrawerClose}\n          theme={theme}\n          data={data}\n        />\n\n        <main\n          className={clsx(classesDrawer.content, {\n            [classesDrawer.contentShift]: open,\n          })}\n        >\n          <div className={classesDrawer.drawerHeader} />\n          <Grid container spacing={1} className=\"tableContainer\">\n            <Grid item xs={12}>\n              {Object.keys(data).map((fileName) => {\n                return (\n                  <>\n                    {Object.keys(data[fileName]).map((testName) => {\n                      // om data fileName, testname är tom (if) skriv ut ett message det finns inga tabeller.\n                      const testLogArray = filterSearch(\n                        search,\n                        data[fileName][testName],\n                        appliedFilter,\n                        appliedFilterType\n                      );\n\n                      const renderTableRow = (index, key) => {\n                        const currentTestLog = testLogArray[index];\n                        return (\n                          <TableRowComponent\n                            key={key}\n                            type={currentTestLog.type}\n                            severity={currentTestLog.severity}\n                            message={currentTestLog.message}\n                            color={getColor(currentTestLog)}\n                          />\n                        );\n                      };\n\n                      const renderTableBody = (items, ref) => {\n                        return <TableBody ref={ref}>{items}</TableBody>;\n                      };\n\n                      //om testLogArray innehåller testloggar rendera tabel\n                      if (Object.keys(testLogArray).length > 0) {\n                        return (\n                          <>\n                            <Grid item xs={12} className=\"tableBody\">\n                              <Typography variant=\"h6\" id={testName}>\n                                {testName}\n                              </Typography>\n                              <Table\n                                className={classes.table}\n                                aria-label=\"customized table\"\n                              >\n                                <TableHead>\n                                  <TableRow>\n                                    <StyledTableCell></StyledTableCell>\n                                    <StyledTableCell>Type</StyledTableCell>\n                                    <StyledTableCell align=\"left\">\n                                      Severity\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"left\">\n                                      Message\n                                    </StyledTableCell>\n                                  </TableRow>\n                                </TableHead>\n                                <ReactList\n                                  itemRenderer={renderTableRow}\n                                  itemsRenderer={(items, ref) =>\n                                    renderTableBody(items, ref)\n                                  }\n                                  length={testLogArray.length}\n                                />\n                              </Table>\n                            </Grid>\n                          </>\n                        );\n                      } else {\n                        return null;\n                      }\n                    })}\n                  </>\n                );\n              })}\n            </Grid>\n          </Grid>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Index;\n","export const filterSearch = (\n  search,\n  logArray,\n  appliedFilter,\n  appliedFilterType\n) => {\n  // first we filter data according to what is written in search input\n  let searchResults = logArray;\n  search = search.toLowerCase();\n\n  if (search !== \"\") {\n    searchResults = searchResults.filter((testLog) => {\n      let type = testLog.type.toLowerCase();\n      let message = testLog.message.toLowerCase();\n      let severity = testLog.severity.toLowerCase();\n\n      if (\n        type.includes(search) ||\n        message.includes(search) ||\n        severity.includes(search)\n      ) {\n        return testLog;\n      }\n    });\n  }\n  return searchResults\n    .filter((testLog) => appliedFilter.includes(testLog.severity))\n    .filter((testLog) =>\n      appliedFilterType.some((filterType) =>\n        testLog.type.startsWith(filterType)\n      )\n    );\n};\n","import \"./App.css\";\nimport \"fontsource-roboto\";\nimport Index from \"./components/Index\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Index />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}